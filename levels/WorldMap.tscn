[gd_scene load_steps=67 format=2]

[ext_resource path="res://textures/map/map_brulos.png" type="Texture" id=1]
[ext_resource path="res://textures/map/map_bg.png" type="Texture" id=2]
[ext_resource path="res://textures/map/map_bc.png" type="Texture" id=3]
[ext_resource path="res://textures/map/map_fm.png" type="Texture" id=4]
[ext_resource path="res://textures/map/map_ct.png" type="Texture" id=5]
[ext_resource path="res://textures/map/map_bc_bg.png" type="Texture" id=6]
[ext_resource path="res://textures/map/map_ct_bg.png" type="Texture" id=7]
[ext_resource path="res://textures/map/map_fm_bg.png" type="Texture" id=8]
[ext_resource path="res://Boo City.ttf" type="DynamicFontData" id=9]
[ext_resource path="res://textures/frozen_anton.png" type="Texture" id=10]
[ext_resource path="res://textures/map/score_bar.png" type="Texture" id=11]
[ext_resource path="res://textures/treasure_unknown.png" type="Texture" id=12]
[ext_resource path="res://textures/map/title.png" type="Texture" id=13]
[ext_resource path="res://music/map.ogg" type="AudioStream" id=14]
[ext_resource path="res://sfx/new_area.ogg" type="AudioStream" id=15]
[ext_resource path="res://textures/vortex.png" type="Texture" id=16]
[ext_resource path="res://textures/map/hell_bg.png" type="Texture" id=17]
[ext_resource path="res://textures/anton_sheet_ice.png" type="Texture" id=18]
[ext_resource path="res://textures/anton_sheet.png" type="Texture" id=19]

[sub_resource type="GDScript" id=6]
resource_name = "WorldMap"
script/source = "extends Node2D

var location = 0

var can_move = false

var snd_1 = preload(\"res://sfx/snd_anton_yay1.wav\")
var snd_2 = preload(\"res://sfx/snd_anton_yay2.wav\")
var snd_3 = preload(\"res://sfx/snd_anton_goodluck.wav\")

func _ready():
	match Globals.progress:
		1:
			# Unlocks boiler city
			$Anton.position = Vector2(-288, 232)
			pass
		2:
			# Boiler city is unlocked
			$Anton.position = Vector2(-64, 200)
			$Locations/BoilerCity.visible = true
			location = 1
		3:
			# Unlocks fudge
			$Anton.position = Vector2(-64, 200)
			$Locations/BoilerCity.visible = true
		4:
			# fudge unlocked
			$Anton.position = Vector2(-64, 32)
			$Locations/BoilerCity.visible = true
			$Locations/FudgeMountain.visible = true
			location = 2
		5:
			# Unlocks clock
			$Anton.position = Vector2(-64, 32)
			$Locations/BoilerCity.visible = true
			$Locations/FudgeMountain.visible = true
		6:
			# Clock unlocked
			$Anton.position = Vector2(-288, -96)
			$Locations/BoilerCity.visible = true
			$Locations/FudgeMountain.visible = true
			$Locations/ClockTower.visible = true
		7:
			# unlocks vortex
			$Anton.position = Vector2(-288, -96)
			$Locations/BoilerCity.visible = true
			$Locations/FudgeMountain.visible = true
			$Locations/ClockTower.visible = true
			$NewArea.stream = preload(\"res://sfx/satan_unlock.ogg\")
			$Music.stream = preload(\"res://music/satan_map.ogg\")
		8:
			$Anton.position = Vector2(-288, -96)
			$Locations/BoilerCity.visible = true
			$Locations/FudgeMountain.visible = true
			$Locations/ClockTower.visible = true
			$Locations/Vortex.visible = true
			$Locations/Vortex/AnimationPlayer.play(\"swirl\")
	
	get_tree().paused = false
	$BG/AnimationPlayer.play(\"scroll\")
	Globals.checkpoint = false
	Globals.secret = false
	
	
	Transitions.grow_in()
	yield(Transitions, \"done\")
	update()
	
	Globals.save_game()

func update():
	match Globals.progress:
		1:
			$Score/Treasure.text = \"TREASURE:\"
			Globals.progress = 2
			$Locations/AnimationPlayer.play(\"unlock_boiler\")
			$AnimationPlayer.play(\"new_area\")
			yield($Locations/AnimationPlayer, \"animation_finished\")
			$Anton/AnimationPlayer.play(\"brulo_to_boiler\")
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"Boiler City\"
			$Score/Quote.text = '\"No Place like Home!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.boiler_ts)
			if Globals.treasure_1: $Score/TreasurePic.texture = load(\"res://textures/treasure_1.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			location = 1
			can_move = true
		2:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"Boiler City\"
			$Score/Quote.text = '\"No Place like Home!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.boiler_ts)
			if Globals.treasure_1: $Score/TreasurePic.texture = load(\"res://textures/treasure_1.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			can_move = true
			location = 1
		3:
			$Score/Treasure.text = \"TREASURE:\"
			Globals.progress = 4
			$Locations/AnimationPlayer.play(\"unlock_fudge\")
			$AnimationPlayer.play(\"new_area\")
			yield($Locations/AnimationPlayer, \"animation_finished\")
			$Anton/AnimationPlayer.play(\"boiler_to_fudge\")
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"Fudge Mountain\"
			$Score/Quote.text = '\"Pretty Cool, Huh?\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.fudge_ts)
			if Globals.treasure_2: $Score/TreasurePic.texture = load(\"res://textures/treasure_2.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			location = 2
			can_move = true
		4:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"Fudge Mountain\"
			$Score/Quote.text = '\"Pretty Cool, Huh?\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.fudge_ts)
			if Globals.treasure_2: $Score/TreasurePic.texture = load(\"res://textures/treasure_2.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			can_move = true
			location = 2
		5:
			$Score/Treasure.text = \"TREASURE:\"
			Globals.progress = 6
			$Locations/AnimationPlayer.play(\"unlock_clock\")
			$AnimationPlayer.play(\"new_area\")
			yield($Locations/AnimationPlayer, \"animation_finished\")
			$Anton/AnimationPlayer.play(\"fudge_to_clock\")
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"The Clock Tower\"
			$Score/Quote.text = '\"About Time!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.clock_ts)
			if Globals.treasure_3: $Score/TreasurePic.texture = load(\"res://textures/treasure_3.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			location = 3
			can_move = true
		6:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"The Clock Tower\"
			$Score/Quote.text = '\"About Time!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.clock_ts)
			if Globals.treasure_3: $Score/TreasurePic.texture = load(\"res://textures/treasure_3.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			can_move = true
			location = 3
		7:
			Globals.progress = 8
			$Locations/AnimationPlayer.play(\"unlock_vortex\")
			$AnimationPlayer.play(\"dark_area\")
			yield($Locations/AnimationPlayer, \"animation_finished\")
			$Anton/AnimationPlayer.play(\"clock_to_hell\")
			yield($Anton/AnimationPlayer, \"animation_finished\")
			$Music.play()
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"HELL\"
			$Score/Quote.text = '\"Let\\'s Get That Chip!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\nN/A\"
			$Score/Treasure.text = \"NO TREASURE\"
			$Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			location = 4
			can_move = true
		8, 9:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/AnimationPlayer.play(\"fade_in\")
			$Score/Title.text = \"The Clock Tower\"
			$Score/Quote.text = '\"About Time!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.clock_ts)
			if Globals.treasure_3: $Score/TreasurePic.texture = load(\"res://textures/treasure_3.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
			can_move = true
			location = 3

func _physics_process(delta):
	print(can_move, location)
	if can_move:
		match location:
			0:
				if (Input.is_action_just_pressed(\"move_up\") or Input.is_action_just_pressed(\"move_right\")) and Globals.progress >= 2:
					move_to(1)
				elif (Input.is_action_just_pressed(\"jump\")):
					enter_level(0)
			1:
				if Input.is_action_just_pressed(\"move_down\") or Input.is_action_just_pressed(\"move_left\"):
					move_to(0)
				elif Input.is_action_just_pressed(\"move_up\") and Globals.progress >= 4:
					move_to(2)
				elif (Input.is_action_just_pressed(\"jump\")):
					enter_level(1)
			2:
				if Input.is_action_just_pressed(\"move_down\"):
					move_to(1, true)
				elif (Input.is_action_just_pressed(\"move_up\") or Input.is_action_just_pressed(\"move_left\")) and Globals.progress >= 6:
					move_to(3, false)
				elif (Input.is_action_just_pressed(\"jump\")):
					enter_level(2)
			3:
				if Input.is_action_just_pressed(\"move_down\"):
					move_to(2, true)
				elif Input.is_action_just_pressed(\"move_right\") and Globals.progress == 8:
					move_to(4)
				elif (Input.is_action_just_pressed(\"jump\")):
					enter_level(3)
			4:
				if Input.is_action_just_pressed(\"move_down\"):
					move_to(3, true)
				elif (Input.is_action_just_pressed(\"jump\")):
					enter_level(4)
		
		if Input.is_action_just_pressed(\"pause\"):
			can_move = false
			Transitions.grow_out()
			yield(Transitions, \"done\")
			get_tree().change_scene(\"res://levels/Menu.tscn\")

func move_to(loc, from=false):
	can_move = false
	location = loc
	match loc:
		0:
			$Anton/AnimationPlayer.play(\"boiler_to_brulo\")
		1:
			if from:
				$Anton/AnimationPlayer.play(\"fudge_to_boiler\")
			else:
				$Anton/AnimationPlayer.play(\"brulo_to_boiler\")
		2:
			if from:
				$Anton/AnimationPlayer.play(\"clock_to_fudge\")
			else:
				$Anton/AnimationPlayer.play(\"boiler_to_fudge\")
		3:
			if from:
				switch_music()
				$Anton/AnimationPlayer.play(\"hell_to_clock\")
			else:
				$Anton/AnimationPlayer.play(\"fudge_to_clock\")
		4:
			switch_music()
			$Anton/AnimationPlayer.play(\"clock_to_hell\")
	yield($Anton/AnimationPlayer, \"animation_finished\")
	match loc:
		0:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/Title.text = \"Brulo's\"
			$Score/Quote.text = '\"Where it all began!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.brulo_ts)
			
			if Globals.treasure_0: $Score/TreasurePic.texture = load(\"res://textures/treasure_0.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
		1:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/Title.text = \"Boiler City\"
			$Score/Quote.text = '\"No Place like Home!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.boiler_ts)
			
			if Globals.treasure_1: $Score/TreasurePic.texture = load(\"res://textures/treasure_1.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
		2:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/Title.text = \"Fudge Mountain\"
			$Score/Quote.text = '\"Pretty Cool, Huh?\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.fudge_ts)
			
			if Globals.treasure_2: $Score/TreasurePic.texture = load(\"res://textures/treasure_2.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
		3:
			$Score/Treasure.text = \"TREASURE:\"
			$Score/Title.text = \"The Clock Tower\"
			$Score/Quote.text = '\"About Time!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\n\" + str(Globals.clock_ts)
			
			if Globals.treasure_3: $Score/TreasurePic.texture = load(\"res://textures/treasure_3.png\")
			else: $Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
		4:
			$Score/Treasure.text = \"NO TREASURE\"
			$Score/Title.text = \"HELL\"
			$Score/Quote.text = '\"Let\\'s Get that Chip!\"'
			$Score/HighScore.text = \"HIGH SCORE:\\nN/A\"
			
			$Score/TreasurePic.texture = load(\"res://textures/treasure_unknown.png\")
	can_move = true

func enter_level(lvl):
	$Anton.play(\"win\")
	$Music.stop()
	if lvl == 4:
		$Music.stream = load(\"res://music/satan_map_select.ogg\")
	else:
		$Music.stream = load(\"res://music/map_select.ogg\")
	$Music.play()
	can_move = false
	var rng = RandomNumberGenerator.new()
	rng.randomize()
	var num = rng.randi_range(1,3)
	$SFX.stream = get(\"snd_\" + str(num))
	$SFX.play()
	yield(get_tree().create_timer(1), \"timeout\")
	Transitions.grow_out()
	yield(Transitions, \"done\")
	match lvl:
		0:
			get_tree().change_scene(\"res://levels/level0.tscn\")
		1:
			get_tree().change_scene(\"res://levels/level1.tscn\")
		2:
			get_tree().change_scene(\"res://levels/level2.tscn\")
		3:
			get_tree().change_scene(\"res://levels/level3.tscn\")
		4:
			yield(get_tree().create_timer(2), \"timeout\")
			get_tree().change_scene(\"res://levels/level4.tscn\")

func switch_music():
	$Music/Tween.interpolate_property($Music, \"volume_db\", 0, -80, 1)
	$Music/Tween.start()
	yield($Music/Tween, \"tween_completed\")
	$Music.stop()
	
	if $Music.stream == preload(\"res://music/satan_map.ogg\"):
		$Music.stream = preload(\"res://music/map.ogg\")
	else:
		$Music.stream = preload(\"res://music/satan_map.ogg\")
	
	$Music.play()
	$Music/Tween.interpolate_property($Music, \"volume_db\", -80, 0, 1)
	$Music/Tween.start()

"

[sub_resource type="Animation" id=11]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -160, 0 ) ]
}

[sub_resource type="Animation" id=12]
resource_name = "scroll"
length = 8.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -160, 300 ), Vector2( -160, -300 ) ]
}

[sub_resource type="Animation" id=26]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=27]
resource_name = "swirl"
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.6, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 3, 1 ), Vector2( 5, 3 ), Vector2( 2, 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 360.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=14]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("BoilerCity:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("BoilerCity:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -64, 160 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("BoilerCity:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("FudgeMountain:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("FudgeMountain:scale")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("FudgeMountain:rotation_degrees")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("ClockTower:visible")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ false ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("ClockTower:position")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -304, -200 ) ]
}
tracks/8/type = "value"
tracks/8/path = NodePath("../BG:modulate")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/9/type = "value"
tracks/9/path = NodePath("Vortex:scale")
tracks/9/interp = 1
tracks/9/loop_wrap = true
tracks/9/imported = false
tracks/9/enabled = true
tracks/9/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ) ]
}

[sub_resource type="Animation" id=15]
resource_name = "unlock_boiler"
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("BoilerCity:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("BoilerCity:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.7 ),
"transitions": PoolRealArray( 5.85634, 1 ),
"update": 0,
"values": [ Vector2( -64, -712 ), Vector2( -64, 160 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("BoilerCity:scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.7, 0.8, 0.9, 1.1 ),
"transitions": PoolRealArray( 1, 1, 2.2974, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 3 ), Vector2( 1, 3 ), Vector2( 3, 1 ), Vector2( 1, 3 ), Vector2( 2, 2 ) ]
}

[sub_resource type="Animation" id=23]
resource_name = "unlock_clock"
tracks/0/type = "value"
tracks/0/path = NodePath("ClockTower:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("ClockTower:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( -584, -200 ), Vector2( -304, -200 ) ]
}

[sub_resource type="Animation" id=18]
resource_name = "unlock_fudge"
tracks/0/type = "value"
tracks/0/path = NodePath("FudgeMountain:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("FudgeMountain:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 0.203063, 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("FudgeMountain:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 0.203063, 1 ),
"update": 0,
"values": [ 0.0, 360.0 ]
}

[sub_resource type="Animation" id=28]
resource_name = "unlock_vortex"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("../BG:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1, 1.5, 2.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 0, 0, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Vortex:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 1.5, 2 ),
"transitions": PoolRealArray( 1, 0.241484, -2, 1 ),
"update": 0,
"values": [ Vector2( 1e-05, 1e-05 ), Vector2( 1e-05, 1e-05 ), Vector2( 4, 4 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("Vortex/AnimationPlayer")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ "swirl", -1, 1.0, false ],
"method": "play"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Vortex:visible")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="DynamicFont" id=1]
size = 20
font_data = ExtResource( 9 )

[sub_resource type="Animation" id=9]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=10]
resource_name = "fade_in"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="AtlasTexture" id=16]
atlas = ExtResource( 19 )
region = Rect2( 168, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 19 )
region = Rect2( 144, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 28, 32 )

[sub_resource type="AtlasTexture" id=34]
atlas = ExtResource( 10 )
region = Rect2( 28, 0, 28, 32 )

[sub_resource type="AtlasTexture" id=5]
atlas = ExtResource( 19 )
region = Rect2( 0, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 19 )
region = Rect2( 0, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 19 )
region = Rect2( 24, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 19 )
region = Rect2( 24, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 19 )
region = Rect2( 24, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 19 )
region = Rect2( 48, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 18 )
region = Rect2( 0, 0, 28, 32 )

[sub_resource type="AtlasTexture" id=39]
atlas = ExtResource( 18 )
region = Rect2( 28, 0, 28, 32 )

[sub_resource type="AtlasTexture" id=40]
atlas = ExtResource( 19 )
region = Rect2( 120, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=41]
atlas = ExtResource( 19 )
region = Rect2( 72, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=42]
atlas = ExtResource( 19 )
region = Rect2( 96, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=43]
atlas = ExtResource( 18 )
region = Rect2( 56, 0, 28, 32 )

[sub_resource type="AtlasTexture" id=44]
atlas = ExtResource( 18 )
region = Rect2( 84, 0, 28, 32 )

[sub_resource type="AtlasTexture" id=45]
atlas = ExtResource( 19 )
region = Rect2( 192, 0, 24, 32 )

[sub_resource type="AtlasTexture" id=46]
atlas = ExtResource( 19 )
region = Rect2( 216, 0, 24, 32 )

[sub_resource type="SpriteFrames" id=48]
animations = [ {
"frames": [ SubResource( 16 ) ],
"loop": false,
"name": "damage",
"speed": 0.0
}, {
"frames": [ SubResource( 32 ) ],
"loop": false,
"name": "fall",
"speed": 0.0
}, {
"frames": [ SubResource( 33 ) ],
"loop": false,
"name": "frozen",
"speed": 0.0
}, {
"frames": [ SubResource( 34 ) ],
"loop": false,
"name": "frozen_fall",
"speed": 0.0
}, {
"frames": [ SubResource( 5 ), SubResource( 35 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 7 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 8 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 36 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 37 ), SubResource( 36 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ), SubResource( 5 ) ],
"loop": true,
"name": "idle",
"speed": 6.0
}, {
"frames": [ SubResource( 38 ), SubResource( 38 ), SubResource( 38 ), SubResource( 38 ), SubResource( 39 ), SubResource( 38 ), SubResource( 38 ), SubResource( 38 ), SubResource( 38 ), SubResource( 38 ), SubResource( 38 ), SubResource( 39 ) ],
"loop": true,
"name": "idle_ice",
"speed": 6.0
}, {
"frames": [ SubResource( 40 ) ],
"loop": true,
"name": "jump",
"speed": 0.0
}, {
"frames": [ SubResource( 41 ), SubResource( 42 ) ],
"loop": true,
"name": "move",
"speed": 10.0
}, {
"frames": [ SubResource( 43 ), SubResource( 44 ) ],
"loop": true,
"name": "move_ice",
"speed": 12.0
}, {
"frames": [ SubResource( 45 ), SubResource( 46 ) ],
"loop": true,
"name": "win",
"speed": 6.0
} ]

[sub_resource type="Animation" id=30]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../Hell:self_modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Locations:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../BG:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath(".:flip_h")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:position")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( -160, 352 ) ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:animation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ "idle" ]
}

[sub_resource type="Animation" id=17]
resource_name = "boiler_to_brulo"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, -2 ),
"update": 0,
"values": [ Vector2( -64, 200 ), Vector2( -288, 232 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:animation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "move", "idle" ]
}

[sub_resource type="Animation" id=19]
resource_name = "boiler_to_fudge"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( -64, 200 ), Vector2( -64, 32 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 1e-05, 1e-05 ), Vector2( 1e-05, 1e-05 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:animation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "move", "idle" ]
}

[sub_resource type="Animation" id=13]
resource_name = "brulo_to_boiler"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, 1 ),
"update": 0,
"values": [ Vector2( -288, 232 ), Vector2( -64, 200 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:animation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "move", "idle" ]
}

[sub_resource type="Animation" id=24]
resource_name = "clock_to_fudge"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( -2, -2, -2 ),
"update": 0,
"values": [ Vector2( -288, -96 ), Vector2( -288, 32 ), Vector2( -64, 32 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:animation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "move", "idle" ]
}

[sub_resource type="Animation" id=31]
resource_name = "clock_to_hell"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 3, 3.5, 4 ),
"transitions": PoolRealArray( 4.43828, 1, 1, 3.03143, 1 ),
"update": 0,
"values": [ Vector2( -288, -96 ), Vector2( -64, -224 ), Vector2( -64, -224 ), Vector2( -160, -344 ), Vector2( -160, 160 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1.5, 3.5, 3.6 ),
"transitions": PoolRealArray( 1, 4.43828, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 1e-05, 1e-05 ), Vector2( 1e-05, 1e-05 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5, 1.5 ),
"transitions": PoolRealArray( 1, 4.43828, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 360.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Hell:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 2.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Locations:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 2, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 0 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../BG:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 2, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:playing")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:animation")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0, 3.5, 4 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ "damage", "fall", "idle" ]
}
tracks/8/type = "value"
tracks/8/path = NodePath(".:frames")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ SubResource( 48 ) ]
}

[sub_resource type="Animation" id=20]
resource_name = "fudge_to_boiler"
length = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( -2, -2 ),
"update": 0,
"values": [ Vector2( -64, 32 ), Vector2( -64, 200 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 1e-05, 1e-05 ), Vector2( 1e-05, 1e-05 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:flip_h")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:animation")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "move", "idle" ]
}

[sub_resource type="Animation" id=25]
resource_name = "fudge_to_clock"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( -2, -2, 1 ),
"update": 0,
"values": [ Vector2( -64, 32 ), Vector2( -288, 32 ), Vector2( -288, -96 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:animation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ "move", "idle" ]
}

[sub_resource type="Animation" id=49]
resource_name = "hell_to_clock"
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1.5, 1.6, 2.5, 3 ),
"transitions": PoolRealArray( -2, 1, 1, 1, -2, 1 ),
"update": 0,
"values": [ Vector2( -160, 160 ), Vector2( -160, 352 ), Vector2( -160, 352 ), Vector2( -64, -224 ), Vector2( -64, -224 ), Vector2( -288, -96 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:scale")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 0.6, 1.6, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 4.43828 ),
"update": 0,
"values": [ Vector2( 2, 2 ), Vector2( 2, 2 ), Vector2( 0, 0 ), Vector2( 0, 0 ), Vector2( 2, 2 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rotation_degrees")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.6, 2.5 ),
"transitions": PoolRealArray( 1, 0.615573, 1 ),
"update": 0,
"values": [ 0.0, 0.0, 360.0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../Hell:self_modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.5, 1.6, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 0 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../Locations:modulate")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 0.5, 1.6, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../BG:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0, 0.5, 2, 2.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/6/type = "value"
tracks/6/path = NodePath(".:animation")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0, 1.6, 2.5, 3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ "move", "damage", "move", "idle" ]
}
tracks/7/type = "value"
tracks/7/path = NodePath(".:playing")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/8/type = "value"
tracks/8/path = NodePath(".:flip_h")
tracks/8/interp = 1
tracks/8/loop_wrap = true
tracks/8/imported = false
tracks/8/enabled = true
tracks/8/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=21]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Music:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=29]
resource_name = "dark_area"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("Music:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 3.5, 4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -80.0, -80.0, 0.0 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("NewArea")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 1 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}

[sub_resource type="Animation" id=22]
resource_name = "new_area"
tracks/0/type = "value"
tracks/0/path = NodePath("Music:volume_db")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.8, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, -30.0, -30.0, 0.0 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("NewArea")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.2 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [ 0.0 ],
"method": "play"
} ]
}

[sub_resource type="Shader" id=153]
code = "shader_type canvas_item;

uniform float amount = 1.0;
uniform float speed = 10.0;
uniform float waves = 60.0;

float Remap01(float value, float from, float to) {
	return (value - from) / (to - from);
}

void fragment() {
	vec2 uv = UV;
	uv.x += (Remap01(sin(uv.y * waves - (TIME * speed)), -waves, waves) - 0.5) * amount;
	vec4 color = texture(TEXTURE, uv);
	COLOR =  color;
}"

[sub_resource type="ShaderMaterial" id=154]
shader = SubResource( 153 )
shader_param/amount = 0.5
shader_param/speed = 2.0
shader_param/waves = 30.0

[node name="WorldMap" type="Node2D"]
script = SubResource( 6 )

[node name="Camera2D" type="Camera2D" parent="."]
current = true

[node name="BG" type="Sprite" parent="."]
position = Vector2( -160, 0 )
scale = Vector2( 2, 2 )
z_index = -3
texture = ExtResource( 2 )
region_enabled = true
region_rect = Rect2( 0, 0, 240, 600 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="BG"]
anims/RESET = SubResource( 11 )
anims/scroll = SubResource( 12 )

[node name="Locations" type="Node2D" parent="."]

[node name="Brulos" type="Sprite" parent="Locations"]
position = Vector2( -288, 176 )
scale = Vector2( 2, 2 )
texture = ExtResource( 1 )

[node name="BoilerCity" type="Sprite" parent="Locations"]
visible = false
position = Vector2( -64, 160 )
scale = Vector2( 2, 2 )
texture = ExtResource( 3 )

[node name="BG" type="Sprite" parent="Locations/BoilerCity"]
show_behind_parent = true
texture = ExtResource( 6 )

[node name="FudgeMountain" type="Sprite" parent="Locations"]
visible = false
position = Vector2( -64, -32 )
scale = Vector2( 2, 2 )
texture = ExtResource( 4 )

[node name="BG" type="Sprite" parent="Locations/FudgeMountain"]
show_behind_parent = true
position = Vector2( -8, -12 )
texture = ExtResource( 8 )

[node name="ClockTower" type="Sprite" parent="Locations"]
visible = false
position = Vector2( -304, -200 )
scale = Vector2( 2, 2 )
texture = ExtResource( 5 )

[node name="BG" type="Sprite" parent="Locations/ClockTower"]
show_behind_parent = true
position = Vector2( 11, 6 )
texture = ExtResource( 7 )

[node name="Vortex" type="Sprite" parent="Locations"]
position = Vector2( -64, -224 )
scale = Vector2( 1e-05, 1e-05 )
texture = ExtResource( 16 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Locations/Vortex"]
anims/RESET = SubResource( 26 )
anims/swirl = SubResource( 27 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Locations"]
anims/RESET = SubResource( 14 )
anims/unlock_boiler = SubResource( 15 )
anims/unlock_clock = SubResource( 23 )
anims/unlock_fudge = SubResource( 18 )
anims/unlock_vortex = SubResource( 28 )

[node name="Score" type="Sprite" parent="."]
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 240, 0 )
scale = Vector2( 2, 2 )
texture = ExtResource( 11 )

[node name="Title" type="Label" parent="Score"]
margin_left = -76.0
margin_top = -148.0
margin_right = 76.0
margin_bottom = -92.0
rect_pivot_offset = Vector2( 76, 0 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 1 )
text = "BRULO'S"
align = 1
valign = 1
autowrap = true

[node name="HighScore" type="Label" parent="Score"]
margin_left = -76.0
margin_top = -64.0
margin_right = 76.0
margin_bottom = -21.0
rect_pivot_offset = Vector2( 76, 0 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 1 )
text = "HIGH SCORE:
1000"
align = 1
valign = 1
autowrap = true

[node name="Treasure" type="Label" parent="Score"]
margin_left = -76.0
margin_right = 76.0
margin_bottom = 43.0
rect_pivot_offset = Vector2( 76, 0 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 1 )
text = "TREASURE:"
align = 1
valign = 1
autowrap = true

[node name="Quote" type="Label" parent="Score"]
margin_left = -76.0
margin_top = 96.0
margin_right = 76.0
margin_bottom = 139.0
rect_pivot_offset = Vector2( 76, 0 )
custom_colors/font_color = Color( 1, 1, 1, 1 )
custom_fonts/font = SubResource( 1 )
text = "\"ANTON's BALLS\""
align = 1
valign = 1
autowrap = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="Score"]
anims/RESET = SubResource( 9 )
anims/fade_in = SubResource( 10 )

[node name="TreasurePic" type="Sprite" parent="Score"]
position = Vector2( 0, 48 )
texture = ExtResource( 12 )

[node name="Anton" type="AnimatedSprite" parent="."]
position = Vector2( -160, 352 )
scale = Vector2( 2, 2 )
frames = SubResource( 48 )
animation = "idle"
frame = 28
playing = true
flip_h = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="Anton"]
anims/RESET = SubResource( 30 )
anims/boiler_to_brulo = SubResource( 17 )
anims/boiler_to_fudge = SubResource( 19 )
anims/brulo_to_boiler = SubResource( 13 )
anims/clock_to_fudge = SubResource( 24 )
anims/clock_to_hell = SubResource( 31 )
anims/fudge_to_boiler = SubResource( 20 )
anims/fudge_to_clock = SubResource( 25 )
anims/hell_to_clock = SubResource( 49 )

[node name="SFX" type="AudioStreamPlayer" parent="."]

[node name="Title" type="Sprite" parent="."]
position = Vector2( -280, 280 )
scale = Vector2( 2, 2 )
texture = ExtResource( 13 )

[node name="Music" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 14 )
autoplay = true
bus = "Music"

[node name="Tween" type="Tween" parent="Music"]

[node name="NewArea" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 15 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 21 )
anims/dark_area = SubResource( 29 )
anims/new_area = SubResource( 22 )

[node name="Hell" type="Sprite" parent="."]
self_modulate = Color( 1, 1, 1, 0 )
material = SubResource( 154 )
position = Vector2( -160, 0 )
scale = Vector2( 2, 2 )
z_index = -2
texture = ExtResource( 17 )

[gd_scene load_steps=11 format=2]

[ext_resource path="res://textures/mole.png" type="Texture" id=1]
[ext_resource path="res://sfx/punch.wav" type="AudioStream" id=2]

[sub_resource type="GDScript" id=1]
resource_name = "Mole"
script/source = "extends KinematicBody2D

var velocity = Vector2.ZERO
var add_vel = Vector2.ZERO

var dir = Vector2.ZERO

onready var speed = 300.0

var gravity = 1500.0

var dead = false

func _ready():
	for ray in $FloorCasts.get_children():
		ray.add_exception(self)
	set_physics_process(false)

func launch(vec, s):
	speed = s
	dir = vec
	$AnimatedSprite.play(\"default\")
	set_physics_process(true)

func on_ground():
	for ray in $FloorCasts.get_children():
		if ray.is_colliding():
			return true
	return false

func _physics_process(delta):
	if !on_ground():
		velocity.y += gravity * delta
	
	#add_vel = lerp(add_vel, Vector2.ZERO)
	velocity.x = speed * dir.x * delta
	velocity = move_and_slide(velocity, Vector2.UP, true)
	
	if dead:
		$AnimatedSprite.rotate(5 * delta)

func _on_VisibilityNotifier2D_screen_exited():
	queue_free()

func die():
	var score = load(\"res://objs/ScoreText.tscn\").instance()
	get_parent().add_child(score)
	score.global_position = self.global_position
	score.go(3, 100, 1, false)
	Globals.add_score(100)
	
	
	$AudioStreamPlayer.play()
	set_collision_mask_bit(0, false)
	set_collision_mask_bit(6, false)
	set_collision_layer_bit(4, false)
	for ray in $FloorCasts.get_children():
		ray.enabled = false
	velocity.y = -600
	$AnimatedSprite.play(\"die\")
	dead = true
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 8, 16 )

[sub_resource type="GDScript" id=4]
resource_name = "MoleHit"
script/source = "extends Area2D

var inn = false
onready var anton = get_tree().get_nodes_in_group(\"Anton\")[0]

func _on_HitArea_body_entered(body):
	if (body == anton) and !get_parent().dead:
		inn = true
	elif body.is_in_group(\"Ball\") and !get_parent().dead:
		set_collision_layer_bit(0, false)
		set_collision_mask_bit(0, false)
		get_parent().die()

func _on_HitArea_body_exited(body):
	if body == anton:
		inn = false

func _physics_process(delta):
	if inn:
		anton.take_damage(self.global_position)
"

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 12, 16 )

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 1 )
region = Rect2( 24, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 1 )
region = Rect2( 48, 0, 24, 24 )

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ SubResource( 6 ), SubResource( 7 ) ],
"loop": true,
"name": "default",
"speed": 5.0
}, {
"frames": [ SubResource( 8 ) ],
"loop": false,
"name": "die",
"speed": 0.0
} ]

[node name="Mole" type="KinematicBody2D" groups=["Mole"]]
collision_layer = 16
collision_mask = 65
script = SubResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2( 0, 8 )
shape = SubResource( 2 )

[node name="FloorCasts" type="Node2D" parent="."]

[node name="Ray1" type="RayCast2D" parent="FloorCasts"]
position = Vector2( -7, 24 )
enabled = true
cast_to = Vector2( 0, 5 )

[node name="Ray2" type="RayCast2D" parent="FloorCasts"]
position = Vector2( 15, 24 )
enabled = true
cast_to = Vector2( 0, 5 )

[node name="Ray3" type="RayCast2D" parent="FloorCasts"]
position = Vector2( 4, 24 )
enabled = true
cast_to = Vector2( 0, 5 )

[node name="HitArea" type="Area2D" parent="."]
script = SubResource( 4 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="HitArea"]
position = Vector2( 4, 8 )
shape = SubResource( 3 )

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
position = Vector2( 4, 8 )
scale = Vector2( 1.2, 1.6 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="."]
scale = Vector2( 2, 2 )
frames = SubResource( 5 )
animation = "die"

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 2 )
bus = "SFX"

[connection signal="body_entered" from="HitArea" to="HitArea" method="_on_HitArea_body_entered"]
[connection signal="body_exited" from="HitArea" to="HitArea" method="_on_HitArea_body_exited"]
[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
